// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/blackhorseya/lobster/internal/apis"
	goal2 "github.com/blackhorseya/lobster/internal/apis/restful/goal"
	health2 "github.com/blackhorseya/lobster/internal/apis/restful/health"
	kr2 "github.com/blackhorseya/lobster/internal/apis/restful/kr"
	task2 "github.com/blackhorseya/lobster/internal/apis/restful/task"
	"github.com/blackhorseya/lobster/internal/biz"
	"github.com/blackhorseya/lobster/internal/biz/goal"
	repo3 "github.com/blackhorseya/lobster/internal/biz/goal/repo"
	"github.com/blackhorseya/lobster/internal/biz/health"
	"github.com/blackhorseya/lobster/internal/biz/health/repo"
	"github.com/blackhorseya/lobster/internal/biz/kr"
	repo4 "github.com/blackhorseya/lobster/internal/biz/kr/repo"
	"github.com/blackhorseya/lobster/internal/biz/task"
	repo2 "github.com/blackhorseya/lobster/internal/biz/task/repo"
	"github.com/blackhorseya/lobster/internal/pkg/app"
	"github.com/blackhorseya/lobster/internal/pkg/config"
	"github.com/blackhorseya/lobster/internal/pkg/databases"
	"github.com/blackhorseya/lobster/internal/pkg/transports/http"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateInjector(path2 string) (*app.Injector, error) {
	configConfig, err := config.NewConfig(path2)
	if err != nil {
		return nil, err
	}
	db, err := databases.NewMariaDB(configConfig)
	if err != nil {
		return nil, err
	}
	iRepo := repo.NewImpl(db)
	iBiz := health.NewImpl(iRepo)
	iHandler := health2.NewImpl(iBiz)
	repoIRepo := repo2.NewImpl(db)
	taskIBiz := task.NewImpl(repoIRepo)
	taskIHandler := task2.NewImpl(taskIBiz)
	iRepo2 := repo3.NewImpl(db)
	goalIBiz := goal.NewImpl(iRepo2)
	goalIHandler := goal2.NewImpl(goalIBiz)
	iRepo3 := repo4.NewImpl(db)
	krIBiz := kr.NewImpl(iRepo3)
	krIHandler := kr2.NewImpl(krIBiz)
	initHandlers := apis.CreateInitHandlerFn(iHandler, taskIHandler, goalIHandler, krIHandler)
	engine := http.NewGinEngine(configConfig, initHandlers)
	injector := app.NewInjector(engine, configConfig)
	return injector, nil
}

// wire.go:

var providerSet = wire.NewSet(app.ProviderSet, config.ProviderSet, http.ProviderSet, databases.ProviderSet, apis.ProviderSet, biz.ProviderSet)
