basePath: /api
definitions:
  er.APPError:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  task.reqStatus:
    properties:
      status:
        type: integer
    required:
    - status
    type: object
  task.reqTitle:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  user.Profile:
    properties:
      created_at:
        type: integer
      email:
        type: string
      id:
        type: integer
      token:
        type: string
    type: object
info:
  contact:
    email: blackhorseya@gmail.com
    name: Sean Cheng
    url: https://blog.seancheng.space
  description: Lobster API
  license:
    name: GPL-3.0
    url: https://spdx.org/licenses/GPL-3.0-only.html
  title: Lobster API
  version: 0.0.1
paths:
  /liveness:
    get:
      consumes:
      - application/json
      description: to know when to restart an application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Health
  /readiness:
    get:
      consumes:
      - application/json
      description: Show application was ready to start accepting traffic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Health
  /v1/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Login
      parameters:
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.Profile'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Login
      tags:
      - Auth
  /v1/auth/signup:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Signup
      parameters:
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.Profile'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Signup
      tags:
      - Auth
  /v1/tasks:
    get:
      consumes:
      - application/json
      description: List all tasks
      parameters:
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 10
        description: size of page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Create a task
      parameters:
      - description: created task
        in: body
        name: created
        required: true
        schema:
          $ref: '#/definitions/task.reqTitle'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Tasks
  /v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: Get a task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Tasks
  /v1/tasks/{id}/status:
    patch:
      consumes:
      - application/json
      description: UpdateStatus a status of task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      - description: updated task
        in: body
        name: updated
        required: true
        schema:
          $ref: '#/definitions/task.reqStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Update a status of task by id
      tags:
      - Tasks
  /v1/tasks/{id}/title:
    patch:
      consumes:
      - application/json
      description: ModifyTitle a status of task by id
      parameters:
      - description: ID of task
        in: path
        name: id
        required: true
        type: integer
      - description: updated task
        in: body
        name: updated
        required: true
        schema:
          $ref: '#/definitions/task.reqTitle'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      tags:
      - Tasks
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get an user by id
      parameters:
      - description: ID of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.Profile'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/er.APPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/er.APPError'
      summary: Get an user by id
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
